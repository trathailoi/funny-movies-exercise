version: '3.3'

services:
  # funnymovies:
  #   image: nginx:stable-alpine
  #   container_name: funnymovies
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/templates/default.conf.template:ro
  #     - ./dist:/usr/share/nginx/html
  #   environment:
  #     - VIRTUAL_HOST=funnymovies.loi-tra
  #     - API_URL=http://funnymovies-backend
  #     - API_HOST=funnymovies-backend
  #   healthcheck:
  #     test: ["CMD-SHELL", "wget -O /dev/null http://funnymovies.loi-tra/nginx-health || exit 1"]
  #     timeout: 5s
  #     retries: 10

  funnymovies-frontend:
    build: .
    image: funnymovies-frontend
    container_name: funnymovies-frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/templates/default.conf.template:ro
      - ./dist:/usr/share/nginx/html
    environment:
      - VIRTUAL_HOST=funnymovies.loi-tra
      - API_URL=http://funnymovies-backend:3000
      - API_HOST=funnymovies-backend
    command: nginx -g 'daemon off;'
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://funnymovies.loi-tra/nginx-health || exit 1"]
      timeout: 5s
      retries: 10
    depends_on:
      - funnymovies-backend
  
  funnymovies-backend:
    container_name: funnymovies-backend
    build:
      context: ./backend
      target: development
    image: funnymovies-backend
    restart: on-failure
    command: npm run start -- --watch
    env_file:
      - ./backend/.env
    environment:
      - MODE=DEV
      - CLIENT_URL=http://funnymovies.loi-tra
      - POSTGRES_HOST=funnymovies-db
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - funnymovies-db
    tty: true
    stdin_open: true
  
  funnymovies-db:
    image: postgres:9.6
    container_name: funnymovies-db
    restart: always
    env_file:
      - ./backend/.env # to get the following env vars: POSTGRES_USER POSTGRES_PASSWORD POSTGRES_DB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    #   - ./data/postgres:/data/postgres (?)

networks:
  default:
    name: funnymovies-local-net
    driver: bridge
  
volumes:
  postgres-data:
